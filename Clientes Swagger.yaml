openapi: 3.0.1
info:
  title: API de agencia de viajes MoonTravels.
  description: Esta API se ancarga de manejar la informaciÃ³n de la empresa MoonTravels.
  version: 1.0.0
servers:
- url: https://api.moontravels/v1/clientes/
tags:
- name: clientes
  description: Maneja la informaciÃ³n de los clientes de MoonTravels

paths:

  /:
    post:
      tags:
      - clientes
      summary: Inserta informaciÃ³n de nuevo cliente en la base de datos
      parameters:
      - $ref: '#/components/parameters/token'
  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyClientesPost'
        required: true
      responses:
        200:
          description: (OK) La informaciÃ³n del cliente se guardo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesPost'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    
  /{idCliente}:
    get:
      tags:
      - clientes
      summary: Obtiene la infomaciÃ²n de la base de datos de un cliente.
      parameters:
      - $ref: '#/components/parameters/token'
      - name: idCliente
        in: path
        description: Identificador del cliente a obtener
        required: true
        schema:
          type: string
        
      responses:
        200:
          description: (OK) La informaciÃ³n del cliente se obtuvo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesGet'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  
  /actualiza/{idCliente}:
    put:
      tags:
      - clientes
      summary: Actualiza la informacion de un cliente en la base de datos.
      parameters:
      - $ref: '#/components/parameters/token'
      - name: idCliente
        in: path
        description: Identificador del cliente a obtener
        required: true
        schema:
          type: string
          
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodyClientesPut'
        
      responses:
        200:
          description: (OK) La informaciÃ³n del cliente se actualizÃ³ correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesPost'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
          
  /elimina/{idCliente}:
    delete:
      tags:
        - clientes
      summary: Elimina logicamente a un cliente.
      parameters:
      - $ref: '#/components/parameters/token'
      - name: idCliente
        in: path
        description: Identificador del cliente a obtener
        required: true
        schema:
          type: string
      responses:
        200:
          description: (OK) El cliente se eliminÃ³ correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesPost'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  
components:
  responses:
    
    Unauthorized:
      description: (Unauthorized) No hay autorizaciÃ³n para llamar al servicio
    
    NotFound:
      description: (NotFound) No se encontrÃ³ informaciÃ³n 
    
    BadRequest:
      description: (Bad Request) Los datos enviados son incorrectos o hay datos obligatorios no enviados
      
    ServerError:
      description: Error en servidor
        

  parameters:
    token:
      in: header
      name: token
      description: Token de autenticaciÃ³n en API.
      required: true
      schema:
        type: string
    

  schemas:

    BodyClientesPost:
      type: object
      properties:
        primer_nombre:
          type: string
          description: Primer nombre del cliente
        segundo_nombre:
          type: string
          description: Segundo nombre del cliente
        apellido_paterno:
          type: string
          description: Apellido paterno del cliente
        apellido_materno:
          type: string
          description: Apellido materno del cliente
        correo_electronico:
          type: string
          description: Email del cliente
  
    ExitoClientesPost:
      type: object
      properties:
        respuesta:
          type: integer
          enum: [1]
          description: Bandera que nos dice si la llamada al servicio fue satisfactoria
        idCliente: 
          type: integer
          enum: [233]
          description: Id correspondiente al cliente
          
          
    ExitoClientesGet:
      type: object
      properties:
        respuesta:
          type: integer
          enum: [1]
          description: Bandera que nos dice si la llamada al servicio fue satisfactoria
        primer_nombre:
          type: string
          description: Primer nombre del cliente
        segundo_nombre:
          type: string
          description: Segundo nombre del cliente
        apellido_paterno:
          type: string
          description: Apellido paterno del cliente
        apellido_materno:
          type: string
          description: Apellido materno del cliente
        correo_electronico:
          type: string
          description: Email del cliente
        contrasenia:
          type: string
          description: ContraseÃ±a de ingreso al sistema del cliente
          
    BodyClientesPut:
      type: object
      properties:
        primer_nombre:
          type: string
          description: Primer nombre del cliente
        segundo_nombre:
          type: string
          description: Segundo nombre del cliente
        apellido_paterno:
          type: string
          description: Apellido paterno del cliente
        apellido_materno:
          type: string
          description: Apellido materno del cliente
        correo_electronico:
          type: string
          description: Email del cliente
          
